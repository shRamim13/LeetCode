
class Solution
{
public:
    vector<int> mergeKArrays(vector<vector<int>> arr, int K)
    {
        vector<int> ans;
        priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>> pq;

        for (int i = 0; i < K; i++)
        {
            pq.push({arr[i][0], {i, 0}}); // {value, {array_index, element_index}}
        }

        while (!pq.empty())
        {
            auto x = pq.top();
            pq.pop();

            ans.push_back(x.first);
            int arrIdx = x.second.first;
            int elemIdx = x.second.second;

            if (elemIdx + 1 < K)
            {
                pq.push({arr[arrIdx][elemIdx + 1], {arrIdx, elemIdx + 1}});
            }
        }

        return ans;
    }
};